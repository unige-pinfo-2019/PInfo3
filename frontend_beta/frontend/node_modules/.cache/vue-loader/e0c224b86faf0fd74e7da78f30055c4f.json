{"remainingRequest":"/home/david/Documents/VueApp/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/david/Documents/VueApp/frontend/src/views/Signup.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/david/Documents/VueApp/frontend/src/views/Signup.vue","mtime":1554936966842},{"path":"/home/david/Documents/VueApp/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/david/Documents/VueApp/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/david/Documents/VueApp/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/david/Documents/VueApp/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Vue from 'vue'\nimport VeeValidate from 'vee-validate';\nimport { Validator } from 'vee-validate';\n\nconst dict = {\n  custom: {\n    email: {\n      required: 'Le champ email est requis',\n      email : 'Votre email est invalide'\n    },\n    firstname: {\n      required: 'Le champ prénom est requis'\n    },\n    lastname: {\n      required: 'Le champ nom est requis'\n    },\n    username: {\n      required: 'Le champ nom d\\'utilisateur est requis',\n      alpha: 'Uniquement des caractères alphanumériques'\n    },\n    password: {\n      required: 'Le champ mot de passe est requis',\n      min : 'Le mot de passe doit avoir au moins 8 caractères'\n    }\n\n\n  }\n};\n\nValidator.localize('en', dict);\nVue.use(VeeValidate, {\n    events: ''\n})\n\nexport default {\n    name : 'signup',\n\n    data() {\n        return {\n            firstname: null,\n            lastname: null,\n            email: null,\n            age: null,\n            username: null,\n            password: null,\n            confirmPassword: null,\n            gender: null,\n            question: null,\n            flagTerms: false\n        }\n    },\n    methods: {\n        validateBeforeSubmit() {\n            this.$validator.validateAll().then((result) => {\n                if (result) {\n                    this.$toast.open({\n                        message: 'Formulaire valide!',\n                        type: 'is-success',\n                        position: 'is-bottom'\n                    })\n                    return;\n                }\n                this.$toast.open({\n                    message: 'Formulaire invalide!',\n                    type: 'is-danger',\n                    position: 'is-bottom'\n                })\n            });\n        }\n    }\n}\n",{"version":3,"sources":["Signup.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Signup.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"notification\">\n      <section>\n          <form @submit.prevent=\"validateBeforeSubmit\">\n\n              <b-field label=\"Prénom\"\n                  :type=\"{'is-danger': errors.has('firstname')}\"\n                  :message=\"errors.first('firstname')\">\n                  <b-input v-model=\"firstname\" name=\"firstname\" v-validate=\"'required'\" />\n              </b-field>\n\n              <b-field label=\"Nom de famille\"\n                  :type=\"{'is-danger': errors.has('lastname')}\"\n                  :message=\"errors.first('lastname')\">\n                  <b-input v-model=\"lastname\" name=\"lastname\" v-validate=\"'required'\" />\n              </b-field>\n\n              <b-field label=\"Email\"\n                  :type=\"{'is-danger': errors.has('email')}\"\n                  :message=\"errors.first('email')\">\n                  <b-input v-model=\"email\" name=\"email\" v-validate=\"'required|email'\" />\n              </b-field>\n\n              <b-field label=\"Nom d'utilisateur\"\n                  :type=\"{'is-danger': errors.has('username')}\"\n                  :message=\"errors.first('username')\">\n                  <b-input type=\"text\" v-model=\"username\" name=\"username\" v-validate=\"'required|alpha'\" />\n              </b-field>\n\n              <b-field label=\"Mot de passe (au moins 8 caractères)\"\n                  :type=\"{'is-danger': errors.has('password')}\"\n                  :message=\"errors.first('password')\">\n                  <b-input type=\"password\" v-model=\"password\" name=\"password\" v-validate=\"'required|min:8'\" />\n              </b-field>\n\n              <b-field label=\"Confirmer le mot de passe\"\n                  :type=\"{'is-danger': errors.has('confirm-password')}\"\n                  :message=\"[{\n                      'Veuillez confirmer le mot de passe' : errors.firstByRule('confirm-password', 'required'),\n                      'Le mot de passe est invalide' : errors.firstByRule('confirm-password', 'is')\n                  }]\">\n                  <b-input type=\"password\" v-model=\"confirmPassword\" name=\"confirm-password\"\n                      v-validate=\"{ required: true, is: password }\" />\n              </b-field>\n\n              <b-field label=\"\"\n                  :type=\"{'is-danger': errors.has('flag-terms')}\"\n                  :message=\"{'Veuillez cocher pour continuer' : errors.firstByRule('flag-terms', 'required')}\">\n                  <b-checkbox v-model=\"flagTerms\" name=\"flag-terms\" v-validate=\"'required:false'\">\n                      Je consents aux <strong><a href=\"/conditions\">CGU</a></strong>\n\n                  </b-checkbox>\n              </b-field>\n\n              <button type=\"submit\" class=\"button is-primary\"> Inscription </button>\n          </form>\n      </section>\n    </div>\n  </div>\n</template>\n\n\n<script>\n    import Vue from 'vue'\n    import VeeValidate from 'vee-validate';\n    import { Validator } from 'vee-validate';\n\n    const dict = {\n      custom: {\n        email: {\n          required: 'Le champ email est requis',\n          email : 'Votre email est invalide'\n        },\n        firstname: {\n          required: 'Le champ prénom est requis'\n        },\n        lastname: {\n          required: 'Le champ nom est requis'\n        },\n        username: {\n          required: 'Le champ nom d\\'utilisateur est requis',\n          alpha: 'Uniquement des caractères alphanumériques'\n        },\n        password: {\n          required: 'Le champ mot de passe est requis',\n          min : 'Le mot de passe doit avoir au moins 8 caractères'\n        }\n\n\n      }\n    };\n\n    Validator.localize('en', dict);\n    Vue.use(VeeValidate, {\n        events: ''\n    })\n\n    export default {\n        name : 'signup',\n\n        data() {\n            return {\n                firstname: null,\n                lastname: null,\n                email: null,\n                age: null,\n                username: null,\n                password: null,\n                confirmPassword: null,\n                gender: null,\n                question: null,\n                flagTerms: false\n            }\n        },\n        methods: {\n            validateBeforeSubmit() {\n                this.$validator.validateAll().then((result) => {\n                    if (result) {\n                        this.$toast.open({\n                            message: 'Formulaire valide!',\n                            type: 'is-success',\n                            position: 'is-bottom'\n                        })\n                        return;\n                    }\n                    this.$toast.open({\n                        message: 'Formulaire invalide!',\n                        type: 'is-danger',\n                        position: 'is-bottom'\n                    })\n                });\n            }\n        }\n    }\n</script>\n"]}]}