sudo: required
dist: trusty

jobs:
  include:
    - stage: build
      language: java
      jdk: openjdk11
      addons:
        sonarcloud:
          organization: "unige-pinfo-2019" # the key of the org you chose at step #3
      script:
        - mvn clean package
        - mvn sonar:sonar -Dsonar.projectKey=unige-pinfo-2019_PInfo3 -Dsonar.organization=unige-pinfo-2019 -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=b89cca69d31bf42b2d5c4ec913c8ae8f1f84f450
      
    - stage: build
      language: java
      jdk: openjdk11
      services:
        - docker
      before_script:
        - cd search-service
      script:
        - mvn clean package
        - docker build -t 2019pinfo3/search-service:latest .
      after_success:
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        - docker push 2019pinfo3/search-service:latest
      
    - stage: build
      language: java
      jdk: openjdk11
      services:
        - docker
      before_script:
        - cd classads-service
      script:
        - mvn clean package
        - docker build -t 2019pinfo3/classads-service:latest .
      after_success:
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        - docker push 2019pinfo3/classads-service:latest
      
    - stage: build
      language: java
      jdk: openjdk11
      services:
        - docker
      before_script:
        - cd user-service
      script:
        - mvn clean package
        - docker build -t 2019pinfo3/user-service:latest .
      after_success:
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        - docker push 2019pinfo3/user-service:latest
      
      # - language: java
      #     jdk: openjdk11
      #     before_script:
      #       - cd classadsresponse-service
      #     script:
      #       - mvn clean package
      #
      # - language: java
      #     jdk: openjdk11
      #     before_script:
      #       - cd statistic-service
      #     script:
      #       - mvn clean package
      
    - stage: build
      language: minimal
      services:
        - docker
      before_script:
        - cd api-gateway
      script:
        - docker build -t 2019pinfo3/api-gateway:latest .
      after_success:
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        - docker push 2019pinfo3/api-gateway:latest
      
    - stage: build
      language: node_js
      node_js:
        - "11"
      services:
        - docker
      before_script:
        - cd web-ui
        - npm rebuild node-sass
        - npm install dependencies
      script:
        - npm run build
        - docker build -t 2019pinfo3/web-ui:latest .
      after_success:
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        - docker push 2019pinfo3/web-ui:latest
    - stage: deploy
      language: minimal
      addons:
        ssh_known_hosts:
          - pinfo3.unige.ch
        apt:
          packages:
          - sshpass
      script:
        - sshpass -p "$SSH_PASS" ssh "$SSH_USER" ./deploy.sh
