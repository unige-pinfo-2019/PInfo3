{"remainingRequest":"/home/gibran/Documents/projetInfo/PInfo3/web-ui/node_modules/babel-loader/lib/index.js!/home/gibran/Documents/projetInfo/PInfo3/web-ui/node_modules/eslint-loader/index.js??ref--13-0!/home/gibran/Documents/projetInfo/PInfo3/web-ui/src/router.js","dependencies":[{"path":"/home/gibran/Documents/projetInfo/PInfo3/web-ui/src/router.js","mtime":1558975412501},{"path":"/home/gibran/Documents/projetInfo/PInfo3/web-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/gibran/Documents/projetInfo/PInfo3/web-ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/gibran/Documents/projetInfo/PInfo3/web-ui/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport Router from 'vue-router'; // import store from 'plugin-vuejs-keycloak'\n// import security from 'plugin-vuejs-keycloak/security'\n\nimport Results from '@/views/AdsResult.vue';\nVue.use(Router);\nvar router = new Router({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes: [{\n    path: '/',\n    name: 'results',\n    component: Results\n  }, {\n    path: '/about',\n    name: 'about',\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: function component() {\n      return import(\n      /* webpackChunkName: \"about\" */\n      './views/About.vue');\n    }\n  }, {\n    path: '/upload',\n    name: 'upload',\n    // meta: { abc: 'efg' },\n    // meta: { requiresAuth: true, roles: ['user'] },\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: function component() {\n      return import(\n      /* webpackChunkName: \"about\" */\n      './views/Upload.vue');\n    }\n  }, {\n    path: '/login',\n    name: 'login',\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: function component() {\n      return import(\n      /* webpackChunkName: \"about\" */\n      './views/Login.vue');\n    }\n  }, {\n    path: '/signup',\n    name: 'signup',\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: function component() {\n      return import(\n      /* webpackChunkName: \"about\" */\n      './views/Signup.vue');\n    }\n  }, {\n    path: '/newad',\n    name: 'newad',\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: function component() {\n      return import(\n      /* webpackChunkName: \"about\" */\n      './views/NewAd.vue');\n    }\n  }, {\n    path: '/ad/:id',\n    name: 'detailedad',\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: function component() {\n      return import(\n      /* webpackChunkName: \"about\" */\n      './views/DetailedAd.vue');\n    },\n    props: true\n  }, {\n    path: '/categories/:id',\n    name: 'category',\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: Results,\n    props: true\n  }, {\n    path: '/unauthorized',\n    name: 'Unauthorized',\n    component: function component() {\n      return import(\n      /* webpackChunkName: \"about\" */\n      './views/About.vue');\n    } // Unauthorized\n\n  }]\n}); // router.beforeEach((to, from, next) => {\n//   if (to.meta.requiresAuth) {\n//     const auth = store.state.security.auth\n//     if (!auth.authenticated) {\n//       security.init(next, to.meta.roles)\n//     }\n//     else {\n//       if (to.meta.roles) {\n//         if (security.roles(to.meta.roles[0])) {\n//           next()\n//         }\n//         else {\n//           next({ name: 'unauthorized' })\n//         }\n//       }\n//       else {\n//         next()\n//       }\n//     }\n//   }\n//   else {\n//     next()\n//   }\n// })\n//\n\nexport default router;",{"version":3,"sources":["/home/gibran/Documents/projetInfo/PInfo3/web-ui/src/router.js"],"names":["Vue","Router","Results","use","router","mode","base","process","env","BASE_URL","routes","path","name","component","props"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,MAAP,MAAmB,YAAnB,C,CAEA;AACA;;AAEA,OAAOC,OAAP,MAAoB,uBAApB;AAEAF,GAAG,CAACG,GAAJ,CAAQF,MAAR;AAEA,IAAMG,MAAM,GAAG,IAAIH,MAAJ,CAAW;AACxBI,EAAAA,IAAI,EAAE,SADkB;AAExBC,EAAAA,IAAI,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAFM;AAGxBC,EAAAA,MAAM,EAAE,CACN;AACEC,IAAAA,IAAI,EAAE,GADR;AAEEC,IAAAA,IAAI,EAAE,SAFR;AAGEC,IAAAA,SAAS,EAAEX;AAHb,GADM,EAMN;AACES,IAAAA,IAAI,EAAE,QADR;AAEEC,IAAAA,IAAI,EAAE,OAFR;AAGE;AACA;AACA;AACAC,IAAAA,SAAS,EAAE;AAAA,aAAM;AAAO;AAAgC,yBAAvC,CAAN;AAAA;AANb,GANM,EAcN;AACEF,IAAAA,IAAI,EAAE,SADR;AAEEC,IAAAA,IAAI,EAAE,QAFR;AAGE;AACA;AACA;AACA;AACA;AACAC,IAAAA,SAAS,EAAE;AAAA,aAAM;AAAO;AAAgC,0BAAvC,CAAN;AAAA;AARb,GAdM,EAwBN;AACEF,IAAAA,IAAI,EAAE,QADR;AAEEC,IAAAA,IAAI,EAAE,OAFR;AAGE;AACA;AACA;AACAC,IAAAA,SAAS,EAAE;AAAA,aAAM;AAAO;AAAgC,yBAAvC,CAAN;AAAA;AANb,GAxBM,EAgCN;AACEF,IAAAA,IAAI,EAAE,SADR;AAEEC,IAAAA,IAAI,EAAE,QAFR;AAGE;AACA;AACA;AACAC,IAAAA,SAAS,EAAE;AAAA,aAAM;AAAO;AAAgC,0BAAvC,CAAN;AAAA;AANb,GAhCM,EAwCN;AACEF,IAAAA,IAAI,EAAE,QADR;AAEEC,IAAAA,IAAI,EAAE,OAFR;AAGE;AACA;AACA;AACAC,IAAAA,SAAS,EAAE;AAAA,aAAM;AAAO;AAAgC,yBAAvC,CAAN;AAAA;AANb,GAxCM,EAgDN;AACEF,IAAAA,IAAI,EAAE,SADR;AAEEC,IAAAA,IAAI,EAAE,YAFR;AAGE;AACA;AACA;AACAC,IAAAA,SAAS,EAAE;AAAA,aAAM;AAAO;AAAgC,8BAAvC,CAAN;AAAA,KANb;AAOEC,IAAAA,KAAK,EAAE;AAPT,GAhDM,EA0DN;AACEH,IAAAA,IAAI,EAAE,iBADR;AAEEC,IAAAA,IAAI,EAAE,UAFR;AAGE;AACA;AACA;AACAC,IAAAA,SAAS,EAAEX,OANb;AAOEY,IAAAA,KAAK,EAAE;AAPT,GA1DM,EAoEN;AACEH,IAAAA,IAAI,EAAE,eADR;AAEEC,IAAAA,IAAI,EAAE,cAFR;AAGEC,IAAAA,SAAS,EAAE;AAAA,aAAM;AAAO;AAAgC,yBAAvC,CAAN;AAAA,KAHb,CAIE;;AAJF,GApEM;AAHgB,CAAX,CAAf,C,CAgFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAeT,MAAf","sourcesContent":["import Vue from 'vue'\nimport Router from 'vue-router'\n\n// import store from 'plugin-vuejs-keycloak'\n// import security from 'plugin-vuejs-keycloak/security'\n\nimport Results from '@/views/AdsResult.vue'\n\nVue.use(Router)\n\nconst router = new Router({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes: [\n    {\n      path: '/',\n      name: 'results',\n      component: Results\n    },\n    {\n      path: '/about',\n      name: 'about',\n      // route level code-splitting\n      // this generates a separate chunk (about.[hash].js) for this route\n      // which is lazy-loaded when the route is visited.\n      component: () => import(/* webpackChunkName: \"about\" */ './views/About.vue')\n    },\n    {\n      path: '/upload',\n      name: 'upload',\n      // meta: { abc: 'efg' },\n      // meta: { requiresAuth: true, roles: ['user'] },\n      // route level code-splitting\n      // this generates a separate chunk (about.[hash].js) for this route\n      // which is lazy-loaded when the route is visited.\n      component: () => import(/* webpackChunkName: \"about\" */ './views/Upload.vue')\n    },\n    {\n      path: '/login',\n      name: 'login',\n      // route level code-splitting\n      // this generates a separate chunk (about.[hash].js) for this route\n      // which is lazy-loaded when the route is visited.\n      component: () => import(/* webpackChunkName: \"about\" */ './views/Login.vue')\n    },\n    {\n      path: '/signup',\n      name: 'signup',\n      // route level code-splitting\n      // this generates a separate chunk (about.[hash].js) for this route\n      // which is lazy-loaded when the route is visited.\n      component: () => import(/* webpackChunkName: \"about\" */ './views/Signup.vue')\n    },\n    {\n      path: '/newad',\n      name: 'newad',\n      // route level code-splitting\n      // this generates a separate chunk (about.[hash].js) for this route\n      // which is lazy-loaded when the route is visited.\n      component: () => import(/* webpackChunkName: \"about\" */ './views/NewAd.vue')\n    },\n    {\n      path: '/ad/:id',\n      name: 'detailedad',\n      // route level code-splitting\n      // this generates a separate chunk (about.[hash].js) for this route\n      // which is lazy-loaded when the route is visited.\n      component: () => import(/* webpackChunkName: \"about\" */ './views/DetailedAd.vue'),\n      props: true,\n\n    },\n    {\n      path: '/categories/:id',\n      name: 'category',\n      // route level code-splitting\n      // this generates a separate chunk (about.[hash].js) for this route\n      // which is lazy-loaded when the route is visited.\n      component: Results,\n      props: true,\n\n    },\n    {\n      path: '/unauthorized',\n      name: 'Unauthorized',\n      component: () => import(/* webpackChunkName: \"about\" */ './views/About.vue')\n    } // Unauthorized\n\n  ]\n})\n\n// router.beforeEach((to, from, next) => {\n//   if (to.meta.requiresAuth) {\n//     const auth = store.state.security.auth\n//     if (!auth.authenticated) {\n//       security.init(next, to.meta.roles)\n//     }\n//     else {\n//       if (to.meta.roles) {\n//         if (security.roles(to.meta.roles[0])) {\n//           next()\n//         }\n//         else {\n//           next({ name: 'unauthorized' })\n//         }\n//       }\n//       else {\n//         next()\n//       }\n//     }\n//   }\n//   else {\n//     next()\n//   }\n// })\n//\nexport default router\n"]}]}