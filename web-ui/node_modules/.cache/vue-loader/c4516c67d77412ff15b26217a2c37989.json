{"remainingRequest":"/home/gibran/Documents/projetInfo/PInfo3/web-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/gibran/Documents/projetInfo/PInfo3/web-ui/src/components/TreeMenu.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/gibran/Documents/projetInfo/PInfo3/web-ui/src/components/TreeMenu.vue","mtime":1557941445640},{"path":"/home/gibran/Documents/projetInfo/PInfo3/web-ui/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/gibran/Documents/projetInfo/PInfo3/web-ui/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/gibran/Documents/projetInfo/PInfo3/web-ui/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/gibran/Documents/projetInfo/PInfo3/web-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/gibran/Documents/projetInfo/PInfo3/web-ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.TreeMenu {\n  .label-wrapper {\n    padding-bottom: 10px;\n    margin-bottom: 10px;\n    border-bottom: 1px solid #ccc;\n    .has-children {\n      cursor: pointer;\n    }\n  }\n}\n\n",{"version":3,"sources":["TreeMenu.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TreeMenu.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"TreeMenu\">\n    <div class=\"label-wrapper\" @click=\"toggleChildren\">\n      <div :style=\"indent\" :class=\"labelClasses\">\n        <i v-if=\"nodes\"></i>\n      {{ label }}\n      </div>\n    </div>\n    <TreeMenu\n      v-if=\"showChildren\"\n      v-for=\"node in nodes\"\n      :nodes=\"node.children\"\n      :label=\"node.name\"\n      :depth=\"depth + 1\"\n    >\n  </TreeMenu>\n\n  </div>\n</template>\n\n\n<style>\n\n.TreeMenu {\n  .label-wrapper {\n    padding-bottom: 10px;\n    margin-bottom: 10px;\n    border-bottom: 1px solid #ccc;\n    .has-children {\n      cursor: pointer;\n    }\n  }\n}\n\n</style>\n\n\n<script>\n  export default {\n    name: 'TreeMenu',\n    props: [ 'nodes', 'label', 'depth' ],\n    data() {\n       return {\n         showChildren: false\n       }\n    },\n    computed: {\n    labelClasses() {\n      return { 'has-children': this.nodes }\n    },\n    indent() {\n      return { transform: `translate(${this.depth * 25}px)` }\n    }\n  },\n  methods: {\n    toggleChildren() {\n       this.showChildren = !this.showChildren;\n    }\n  }\n}\n</script>\n"]}]}